" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles file of Steve Francia.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   This file imports the various plugins of spf13. If you
"   wish to alter which groups are imported, see vimrc.before.
"   If you wish to add or remove individual bundles, create
"   ~/.vimrc.bundles.local and `Bundle` or `UnBundle` as needed
"   from there.
"
"   You can find me at http://spf13.com
" }

" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }
" }

" Custom plugins defined using vim-plug
call plug#begin('~/.vim/bundle')

  " General {
      Plug 'MarcWeber/vim-addon-mw-utils'
      Plug 'tpope/vim-sensible'
      Plug 'tomtom/tlib_vim'
      if executable('ag')
          Plug 'mileszs/ack.vim'
          let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
      elseif executable('ack-grep')
          let g:ackprg="ack-grep -H --nocolor --nogroup --column"
          Plug 'mileszs/ack.vim'
      elseif executable('ack')
          Plug 'mileszs/ack.vim'
      endif
      Plug 'tpope/vim-surround'
      Plug 'tpope/vim-repeat'
      Plug 'tpope/vim-eunuch'
      Plug 'rhysd/conflict-marker.vim'
      Plug 'Raimondi/delimitMate'
      Plug 'tpope/vim-unimpaired'
      Plug 'tpope/vim-endwise'
      Plug 'terryma/vim-multiple-cursors'
      Plug 'vim-scripts/sessionman.vim'
      Plug 'matchit.zip'
      "Plug 'mhinz/vim-signify'
      Plug 'osyo-manga/vim-over'
      Plug 'gcmt/wildfire.vim'
      Plug 'tpope/vim-sleuth' " detect indent style (tabs vs. spaces)
      Plug 'sickill/vim-pasta' " context-aware pasting
  " }

  " Navigation {
      Plug 'scrooloose/nerdtree', { 'on': ['NERDTreeToggle', 'NERDTreeFind'] } | Plug 'Xuyuanp/nerdtree-git-plugin' | Plug 'ryanoasis/vim-devicons'
      Plug 'ctrlpvim/ctrlp.vim'
      Plug 'tacahiroy/ctrlp-funky'
      Plug 'easymotion/vim-easymotion'
      Plug 'jistr/vim-nerdtree-tabs'
      Plug 'mbbill/undotree'
      Plug 'tpope/vim-vinegar'
  " }

  " UI {
      Plug 'chriskempson/base16-vim'
      Plug 'spf13/vim-colors'
      Plug 'bling/vim-airline'
      Plug 'powerline/fonts'
      Plug 'bling/vim-bufferline'
      Plug 'flazz/vim-colorschemes'
      Plug 'nathanaelkane/vim-indent-guides'
  " }

  " Themes {
      Plug 'trusktr/seti.vim'
      Plug 'justincampbell/vim-railscasts'
      Plug 'stulzer/heroku-colorscheme'
      Plug 'vim-scripts/kkruby.vim'
      Plug 'zsoltf/vim-maui'
      Plug 'dylanaraps/crayon'
      Plug 'thomd/vim-wasabi-colorscheme'
      Plug 'ratazzi/blackboard.vim'
      Plug 'demorose/up.vim'
  " }

  " Writing {
      "Plug 'tpope/vim-abolish.git'
      Plug 'reedes/vim-litecorrect'
      Plug 'reedes/vim-textobj-sentence'
      Plug 'reedes/vim-textobj-quote'
      Plug 'reedes/vim-wordy'
  " }

  " General Programming {
      Plug 'AndrewRadev/splitjoin.vim' " really cool us gS or gJ to put inline or split statements
      Plug 'airblade/vim-gitgutter'
      Plug 'tpope/vim-fugitive'
      Plug 'mattn/webapi-vim'
      Plug 'mattn/gist-vim'
      Plug 'scrooloose/nerdcommenter'
      "Plug 'tpope/vim-commentary'
      Plug 'godlygeek/tabular'
      Plug 'luochen1990/rainbow'
      if executable('ctags')
          Plug 'majutsushi/tagbar'
      endif
      Plug 'editorconfig/editorconfig-vim'
  " }

  " Snippets & Autocomplete {
      Plug 'benekastah/neomake'
      Plug 'Shougo/deoplete.nvim'
      "Plug 'Valloric/YouCompleteMe'
      Plug 'SirVer/ultisnips'
      Plug 'honza/vim-snippets'
      "Plug 'garbas/vim-snipmate'
      Plug 'ervandew/supertab'
  " }

  " Tmux {
      Plug 'tmux-plugins/vim-tmux-focus-events'
      Plug 'benmills/vimux'
  " }

  " JavaScript {
      Plug 'marijnh/tern_for_vim', { 'for': 'javascript' }
      Plug 'digitaltoad/vim-jade', { 'for': 'jade' }
      Plug 'jelera/vim-javascript-syntax', { 'for': 'javascript' }
      Plug 'mxw/vim-jsx', { 'for': 'jsx' }
      Plug 'moll/vim-node', { 'for': 'javascript' }
      Plug 'maksimr/vim-jsbeautify', { 'for': 'javascript' }
      Plug 'einars/js-beautify', { 'for': 'javascript' }
      Plug 'elzr/vim-json', { 'for': 'json' }
      Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
      Plug 'briancollins/vim-jst'
      Plug 'kchmck/vim-coffee-script' 
  " }

  " TypeScript {
      "Plug 'Quramy/tsuquyomi', { 'for': 'typescript', 'do': 'npm install' }
      "Plug 'Shougo/vimproc.vim', { 'do': 'make' }
      "Plug 'leafgarland/typescript-vim', { 'for': 'typescript' }
  " }

  " HTML & CSS {
      Plug 'mattn/emmet-vim'
      Plug 'tpope/vim-ragtag'
      Plug 'amirh/HTML-AutoCloseTag'
      Plug 'zeekay/vim-html2jade'
      Plug 'groenewege/vim-less'
      Plug 'hail2u/vim-css3-syntax'
      Plug 'gorodinskiy/vim-coloresque'
      Plug 'ap/vim-css-color', { 'for': 'css' }
      Plug 'itspriddle/vim-marked', { 'for': 'markdown', 'on': 'MarkedOpen' }
      Plug 'tpope/vim-markdown', { 'for': 'markdown' }
      Plug 'tpope/vim-haml'
      Plug 'wavded/vim-stylus', { 'for': ['stylus', 'markdown'] }
      Plug 'mustache/vim-mustache-handlebars'
      Plug 'cakebaker/scss-syntax.vim', { 'for': 'scss' }
      Plug 'gregsexton/MatchTag', { 'for': 'html' }
      Plug 'othree/html5.vim', { 'for': 'html' }
  " }

  " Ruby {
      "Plug 'tpope/vim-rails'
      " let g:rubycomplete_buffer_loading = 1
      " let g:rubycomplete_classes_in_global = 1
      " let g:rubycomplete_rails = 1
  " }

  " Misc {
      Plug 'tpope/vim-dispatch' " a vim compiler used to run tasks
      "Plug 'rust-lang/rust.vim'
      "Plug 'spf13/vim-preview'
      "Plug 'tpope/vim-cucumber'
      "Plug 'cespare/vim-toml'
      "Plug 'quentindecock/vim-cucumber-align-pipes'
      "Plug 'saltstack/salt-vim'
      "Plug 'junegunn/goyo.vim', { 'on': 'Goyo' } " distraction-free writing
      "Plug 'junegunn/limelight.vim', { 'on': 'Limelight' } " focus tool. Good for presentating with vim
      "Plug 'junegunn/goyo.vim', { 'on': 'Goyo' } " distraction-free writing
      "Plug 'junegunn/limelight.vim', { 'on': 'Limelight' } " focus tool. Good for presentating with vim
      "Plug 'sotte/presenting.vim' " Plugin for presenting slides in vim with markdown
  " }

call plug#end()

" Use fork bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.fork"))
        source ~/.vimrc.bundles.fork
    endif
" }

" Use local bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.local"))
        source ~/.vimrc.bundles.local
    endif
" }
