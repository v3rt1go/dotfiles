New ubuntu 14.04 machine setup:

1. Install git
sudo add-apt-repository ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git git-core wget curl

2. Install build dependencies
sudo apt-get install build-essential cmake dh-autoreconf
sudo apt-get install m4 ruby ruby-gems texinfo libbz2-dev libcurl4-openssl-dev libexpat-dev libncurses-dev zlib1g-dev

3. Install nodejs
curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
sudo apt-get install -y nodejs

4. Install nvm
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash
If after bash / terminal reload nvm is still not in path check:
https://github.com/creationix/nvm/issues/576
  - Check if .profile / .bashrc or .bashrc_profile contain the source nvm files
  - Add the two export lines in .bashrc or .bashrc_profile

5. Install node versions with nvm
nvm install stable
nvm install 0.12.7
nvm use stable
nvm alias default stable

6. git clone ~/dotfiles

echo "Updating git submodules ..."
cd $DOTFILES
git submodule update --init --recursive

!!! Check if powerline fonts and antigen are updated

6b. Install linuxbrew
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"

Check if:
Add to your .bashrc or .zshrc:
export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"

7 Install taskwarrior
echo "Installing taskwarrior ..."
sudo apt-get install task

7a Install xclip
sudo apt-get install xclip

8. Install tmux
sudo apt-get install -y python-software-properties software-properties-common
sudo add-apt-repository -y ppa:pi-rho/dev
sudo apt-get update
sudo apt-get install -y tmux=2.0-1~ppa1~t

# Install tmux plugins
echo "Setting up tmux plugins"
git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
git clone https://github.com/erikw/tmux-powerline.git $HOME/.tmux/plugin/tmux-powerline

9. Install Powerline fonts
- in dotfiles:
git clone https://github.com/powerline/fonts.git
cd fonts
./install.sh

# Install autojump
echo "Installing autojump ..."
sudo apt-get install autojump

# Install silversearcher-ag to use with ctrlp in vim
echo "Installing silversearcher ..."
sudo apt-get install silversearcher-ag

# For the lulz
sudo apt-get install fortune
sudo apt-get install cowsay

# Install ctags; jsctags; tern
echo "Install ctags jsctags and ternjs"
sudo apt-get install ctags
npm install -g git+https://github.com/ramitos/jsctags.git
npm install -g tern

# Setup eslint with bable support
echo "Install eslint with babel-eslint"
npm install -g eslint
npm install -g eslint-plugin-filenames
npm install -g babel
npm install -g babel-eslint
npm install -g html2jade

11. Install ZSH & OH-MY-ZSH
sudo apt-get install zsh
sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
sudo chsh -s $(which zsh) $(whoami)

12. Install AUTOGEN

13. Install neovim
sudo add-apt-repository ppa:neovim-ppa/unstable
sudo apt-get update
sudo apt-get install neovim

Prerequisites for the Python modules:
sudo apt-get install python-dev python-pip python3-dev python3-pip
For instructions on how to install the Python modules, see :help nvim_python.

https://neovim.io/doc/user/nvim_python.html#nvim-python
https://neovim.io/doc/user/nvim_clipboard.html#nvim-clipboard

!!!! COPY VIM CONFIG FILES FROM dotfiles-fedora !!!!


# Configuring nvim
echo "Linking vim config files"
ln -sf $DOTFILES/.vimrc $HOME/.vimrc
ln -sf $DOTFILES/.vimrc.bundles $HOME/.vimrc.bundles
echo "Installing vim-plug for plugin management"
mkdir $HOME/.vim
curl -fLo $HOME/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo "Configuring neovim files and plugins"
mkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}
ln -s ~/.vim $XDG_CONFIG_HOME/nvim
ln -s ~/.vimrc $XDG_CONFIG_HOME/nvim/init.vim

# Link config files 
echo "Linking all config files in $HOME ..."
ln -sf $DOTFILES/.aliases $HOME/.aliases
ln -sf $DOTFILES/.gitconfig $HOME/.gitconfig

ln -sf $DOTFILES/.zshrc $HOME/.zshrc
ln -sf $HOME/Dropbox/taskwarrior/backlog.data $HOME/.task/backlog.data
ln -sf $HOME/Dropbox/taskwarrior/completed.data $HOME/.task/completed.data
ln -sf $HOME/Dropbox/taskwarrior/pending.data $HOME/.task/pending.data
ln -sf $HOME/Dropbox/taskwarrior/undo.data $HOME/.task/undo.data
ln -sf $DOTFILES/.zshrc.bundles $HOME/.zshrc.bundles
ln -sf $DOTFILES/.zshenv $HOME/.zshenv

ln -sf $DOTFILES/.taskrc $HOME/.taskrc
ln -sf $DOTFILES/.psqlrc $HOME/.psqlrc
ln -sf $DOTFILES/.tmux.conf $HOME/.tmux.conf

# Link .editorconfig file in home
cd $HOME
ln -sf $DOTFILES/.editorconfig $HOME/.editorconfig

!!! Get base16 terminat themes from here:
https://github.com/chriskempson/base16-gnome-terminal

# Setup editor theme - for gnome terminal
echo "Setting up editor theme for gnome terminal"
ln -sf $DOTFILES/base16-tomorrow.dark.sh $HOME/.config/base16-tomorrow.dark.sh
source $HOME/.config/base16-tomorrow.dark.sh

# Remove red titlebar from terminator
man terminator_config
right click --> preferences --> Profiles (tab) --> untick "show titlebar"

alternatively, edit ~/.config/terminator/config

add 
Code:
 show_titlebar = false
to the relevant profile , e.g.
Code:
[profiles]
  [[default]]

!!! Check if running in 256 color mode
http://askubuntu.com/questions/446076/change-environment-variable-term
There's an option called xterm in Terminator's configuration (see man terminator_config), which is supposed to set TERM. Due to a bug, it does not work, and TERM is always set to xterm. Terminator also sets a COLORTERM variable, to gnome-terminal, so you can use that to set TERM to xterm-256color (since gnome-terminal has no problem with that value:

[[ $COLORTERM = gnome-terminal ]] && TERM=xterm-256color
Or, what I use to avoid problems with screen/tmux:

[[ $COLORTERM = gnome-terminal && ! $TERM = screen-256color ]] && TERM=xterm-256color

14. Install Remmina and remmina-plugins-rdw && setup remotes from rdps.txt
15. Install FileZilla
16. Install mc
17. Install transmission

18. Install postgresql && pgadmin3
http://www.codeproject.com/Articles/898303/Installing-and-Configuring-PostgreSQL-on-Linux-Min
19. Install mongodb
https://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/

20. Install robomongo
get it from robomongo.org - daca merge
OR: https://gist.github.com/saelfaer/11362946

21. Install sublime packages and themes
  - Install package control
  https://packagecontrol.io/installation
  - Install theme and popular packages from: https://packagecontrol.io/

22. Install arduino and linux setup requirements

